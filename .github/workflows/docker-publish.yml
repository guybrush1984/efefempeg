name: Docker Build and Push

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

env:
  IMAGE_NAME: ffmpeg-minimal

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: final
          load: true

      - name: Test FFmpeg and FFprobe
        run: |
          echo "Testing FFmpeg and FFprobe binaries..."
          # Create container (will use ffmpeg as entrypoint)
          docker create --name test-container ${{ steps.meta.outputs.tags }} -version
          docker cp test-container:/ffmpeg ./ffmpeg
          docker cp test-container:/ffprobe ./ffprobe
          docker rm test-container

          echo "Testing ffmpeg..."
          chmod +x ./ffmpeg
          ./ffmpeg -version

          echo "Testing ffprobe..."
          chmod +x ./ffprobe
          ./ffprobe -version

          echo "Checking required filters..."
          ./ffmpeg -filters 2>&1 | grep -E "asetrate|aresample|atempo|areverse|silenceremove|concat|apad|anullsrc"

          echo "Checking required codecs..."
          ./ffmpeg -codecs 2>&1 | grep -E "pcm_|aac"

          echo "All tests passed!"